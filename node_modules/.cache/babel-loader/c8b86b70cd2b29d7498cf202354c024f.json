{"ast":null,"code":"import blogpost from\"../data/blog/blog.json\";import blogcategory from'../data/category.json';function setCategoriesCount(){for(let i=0;i<blogcategory.length;i++){var count=blogpost.filter(post=>{return post.category.includes(parseInt(blogcategory[i].id));});count=count.length;blogcategory[i].count=count;}}setCategoriesCount();// Post details\nfunction getBlog(id){return blogpost.filter(blog=>{return blog.id===parseInt(id);})[0];}// Related post\nfunction getPostByCategory(items,pageRoute){var elems=blogpost.filter(post=>{return parseInt(post.id)!==parseInt(pageRoute)&&post.category.some(r=>items.includes(r));});return elems;}// Recent post\nfunction changeToMonth(month){var months=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];return months[month];}function setDemoDate(){var today=new Date();blogpost.slice(0,3).map(post=>{post.timestamp=today.getTime()-3*24*60*60*1000;// Remove this date on your live demo. This is only used for preview purposed. Your date should actually be updated\n// in the blog.json object\npost.postdate=\"\".concat(today.getDate()-2,\" \").concat(changeToMonth(today.getMonth()),\", \").concat(today.getFullYear());return post;});}function getRecentPost(){var elems=blogpost.filter(post=>{return post.timestamp<new Date(post.postdate);});return elems;}setDemoDate();// Filter \nfunction getFilteredPosts(posts){let filter=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{cat:'',tag:'',author:'',searchQuery:''};var catgoryFilter=filter.cat!==undefined&&filter.cat!==null&&filter.cat!=='';var tagFilter=filter.tag!==undefined&&filter.tag!==null&&filter.tag!=='';var authorFilter=filter.author!==undefined&&filter.author!==null&&filter.author!=='';var searchFilter=filter.searchQuery!==undefined&&filter.searchQuery!==null&&filter.searchQuery!=='';// Category filter\nif(catgoryFilter){posts=posts.filter(post=>{return post.category!==undefined&&post.category!==null&&post.category.includes(parseInt(filter.cat));});}// Tag filter\nif(tagFilter){posts=posts.filter(post=>{return post.tags!==undefined&&post.tags!==null&&post.tags.includes(parseInt(filter.tag));});}// Author filter\nif(authorFilter){posts=posts.filter(post=>{return post.author!==undefined&&post.author!==null&&post.author.includes(parseInt(filter.author));});}if(searchFilter){posts=posts.filter(post=>{return post.title!==undefined&&post.title!==null&&post.title.toLowerCase().includes(filter.searchQuery.toLowerCase());});}return posts;}export{getBlog,getFilteredPosts,getRecentPost,getPostByCategory};","map":{"version":3,"names":["blogpost","blogcategory","setCategoriesCount","i","length","count","filter","post","category","includes","parseInt","id","getBlog","blog","getPostByCategory","items","pageRoute","elems","some","r","changeToMonth","month","months","setDemoDate","today","Date","slice","map","timestamp","getTime","postdate","concat","getDate","getMonth","getFullYear","getRecentPost","getFilteredPosts","posts","arguments","undefined","cat","tag","author","searchQuery","catgoryFilter","tagFilter","authorFilter","searchFilter","tags","title","toLowerCase"],"sources":["D:/How/1_The first ReactJS project/homeassist-frontend/src/helper/blogHelper.js"],"sourcesContent":["import blogpost from \"../data/blog/blog.json\";\r\nimport blogcategory from '../data/category.json';\r\n\r\nfunction setCategoriesCount() {\r\n    for (let i = 0; i < blogcategory.length; i++) {\r\n        var count = blogpost.filter(post => { return post.category.includes(parseInt(blogcategory[i].id)) });\r\n        count = count.length;\r\n        blogcategory[i].count = count;\r\n    }\r\n}\r\nsetCategoriesCount();\r\n// Post details\r\nfunction getBlog(id) {\r\n    return blogpost.filter(blog => { return blog.id === parseInt(id) })[0];\r\n}\r\n// Related post\r\nfunction getPostByCategory(items, pageRoute) {\r\n    var elems = blogpost.filter((post) => { return parseInt(post.id) !== parseInt(pageRoute) && post.category.some(r => items.includes(r)) });\r\n    return elems;\r\n}\r\n\r\n// Recent post\r\nfunction changeToMonth(month) {\r\n    var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n    return months[month];\r\n}\r\n\r\nfunction setDemoDate() {\r\n    var today = new Date();\r\n    blogpost.slice(0, 3).map(post => {\r\n        post.timestamp = today.getTime() - (3 * 24 * 60 * 60 * 1000);\r\n        // Remove this date on your live demo. This is only used for preview purposed. Your date should actually be updated\r\n        // in the blog.json object\r\n        post.postdate = `${today.getDate() - 2} ${changeToMonth(today.getMonth())}, ${today.getFullYear()}`;\r\n        return post;\r\n    });\r\n}\r\n\r\nfunction getRecentPost() {\r\n    var elems = blogpost.filter(post => {\r\n        return post.timestamp < new Date(post.postdate);\r\n    });\r\n    return elems;\r\n}\r\n\r\nsetDemoDate();\r\n// Filter \r\nfunction getFilteredPosts(posts, filter = { cat: '', tag: '', author: '', searchQuery: '' }) {\r\n    var catgoryFilter = filter.cat !== undefined && filter.cat !== null && filter.cat !== '';\r\n    var tagFilter = filter.tag !== undefined && filter.tag !== null && filter.tag !== '';\r\n    var authorFilter = filter.author !== undefined && filter.author !== null && filter.author !== '';\r\n    var searchFilter = filter.searchQuery !== undefined && filter.searchQuery !== null && filter.searchQuery !== '';\r\n    // Category filter\r\n    if (catgoryFilter) {\r\n        posts = posts.filter(post => {\r\n            return (post.category !== undefined && post.category !== null) && post.category.includes(parseInt(filter.cat))\r\n        })\r\n    } \r\n    // Tag filter\r\n    if (tagFilter) {\r\n        posts = posts.filter(post => {\r\n            return (post.tags !== undefined && post.tags !== null) && post.tags.includes(parseInt(filter.tag))\r\n        })\r\n    }\r\n    // Author filter\r\n    if (authorFilter) {\r\n        posts = posts.filter(post => {\r\n            return (post.author !== undefined && post.author !== null) && post.author.includes(parseInt(filter.author))\r\n        })\r\n    }\r\n    if (searchFilter) {\r\n        posts = posts.filter(post => {\r\n            return (post.title !== undefined && post.title !== null) && post.title.toLowerCase().includes(filter.searchQuery.toLowerCase())\r\n        })\r\n    }\r\n    return posts;\r\n}\r\nexport { getBlog, getFilteredPosts, getRecentPost, getPostByCategory };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}