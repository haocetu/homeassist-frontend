{"ast":null,"code":"import service from'../data/service/service.json';import blogcategory from'../data/category.json';function setCategoriesCount(){for(let i=0;i<blogcategory.length;i++){var count=service.filter(post=>{return post.category.includes(parseInt(blogcategory[i].id));});count=count.length;blogcategory[i].count=count;}}setCategoriesCount();// Recent Service\nfunction changeToMonth(month){var months=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];return months[month];}function setDemoDate(){var today=new Date();service.slice(0,3).map(post=>{post.timestamp=today.getTime()-3*24*60*60*1000;// Remove this date on your live demo. This is only used for preview purposed. Your date should actually be updated\n// in the blog.json object\npost.postdate=\"\".concat(changeToMonth(today.getMonth()),\" \").concat(today.getDate()-2,\", \").concat(today.getFullYear());return post;});}function getRecentService(){var elems=service.filter(post=>{return post.timestamp<new Date(post.postdate);});return elems;}setDemoDate();// Service details\nfunction getService(id){return service.filter(post=>{return post.id===parseInt(id);})[0];}// Filter \nfunction getFilteredPosts(posts){let filter=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{cat:''};var catgoryFilter=filter.cat!==undefined&&filter.cat!==null&&filter.cat!=='';// Category filter\nif(catgoryFilter){posts=posts.filter(post=>{return post.category!==undefined&&post.category!==null&&post.category.includes(parseInt(filter.cat));});}return posts;}export{getService,getFilteredPosts,getRecentService};","map":{"version":3,"names":["service","blogcategory","setCategoriesCount","i","length","count","filter","post","category","includes","parseInt","id","changeToMonth","month","months","setDemoDate","today","Date","slice","map","timestamp","getTime","postdate","concat","getMonth","getDate","getFullYear","getRecentService","elems","getService","getFilteredPosts","posts","arguments","undefined","cat","catgoryFilter"],"sources":["D:/How/1_The first ReactJS project/homeassist-frontend/src/helper/serviceHelper.js"],"sourcesContent":["import service from '../data/service/service.json';\r\nimport blogcategory from '../data/category.json';\r\n\r\nfunction setCategoriesCount() {\r\n    for (let i = 0; i < blogcategory.length; i++) {\r\n        var count = service.filter(post => { return post.category.includes(parseInt(blogcategory[i].id)) });\r\n        count = count.length;\r\n        blogcategory[i].count = count;\r\n    }\r\n}\r\nsetCategoriesCount();\r\n// Recent Service\r\nfunction changeToMonth(month) {\r\n    var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n    return months[month];\r\n}\r\nfunction setDemoDate() {\r\n    var today = new Date();\r\n    service.slice(0, 3).map(post => {\r\n        post.timestamp = today.getTime() - (3 * 24 * 60 * 60 * 1000);\r\n        // Remove this date on your live demo. This is only used for preview purposed. Your date should actually be updated\r\n        // in the blog.json object\r\n        post.postdate = `${changeToMonth(today.getMonth())} ${today.getDate() - 2}, ${today.getFullYear()}`;\r\n        return post;\r\n    });\r\n}\r\nfunction getRecentService() {\r\n    var elems = service.filter(post => {\r\n        return post.timestamp < new Date(post.postdate);\r\n    });\r\n    return elems;\r\n}\r\nsetDemoDate();\r\n// Service details\r\nfunction getService(id) {\r\n    return service.filter(post => { return post.id === parseInt(id) })[0];\r\n}\r\n// Filter \r\nfunction getFilteredPosts(posts, filter = { cat: '' }) {\r\n    var catgoryFilter = filter.cat !== undefined && filter.cat !== null && filter.cat !== '';\r\n    // Category filter\r\n    if (catgoryFilter) {\r\n        posts = posts.filter(post => {\r\n            return (post.category !== undefined && post.category !== null) && post.category.includes(parseInt(filter.cat))\r\n        })\r\n    } \r\n    return posts;\r\n}\r\nexport { getService, getFilteredPosts, getRecentService };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}